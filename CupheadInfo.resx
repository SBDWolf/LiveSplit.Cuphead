<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>